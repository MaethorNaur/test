name: PR test

on:
  pull_request:
    branches: [main]
    paths:
      - "**.gradle"
      - "8vim/**"
jobs:
  changes:
    name: Detect changed files
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      src: ${{ steps.changes.outputs.src }}
      yaml: ${{ steps.changes.outputs.yaml }}
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 8vim/**/*.java
              - 8vim/**/*.kt
              - 8vim/**/*.xml
              - 8vim/**/*.pro
              - "**.gradle"
            yaml:
              - added|modified: '8vim/src/main/res/raw/*.ya?ml'
              - modified: '8vim/src/main/resources/schema.json'
  validate_layouts:
    needs: changes
    if: ${{ needs.changes.outputs.yaml == 'true' }}
    name: Validate language layouts
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
      - uses: 8VIM/json-yaml-validate@main
        with:
          json_schema: ./8vim/src/main/resources/schema.json
          yaml_as_json: "true"
          base_dir: ./8vim/src/main/res/raw
  test:
    name: 8VIM tests
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: temurin
          cache: gradle
      - run: ./gradlew check
  build:
    if: ${{ !cancelled() && (needs.test.result == 'success' || needs.validate_layouts.result == 'success') }}
    needs: [validate_layouts, test]
    uses: ./.github/workflows/build.yaml
    with:
      ref: ${{github.ref}}
      target: debug
    secrets: inherit
  upload_artifact:
    if: ${{ !cancelled() && needs.build.result=='success' && (needs.test.result == 'success' || needs.validate_layouts.result == 'success') }}
    needs: [build, validate_layouts, test]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      pull-requests: write
    steps:
      - name: Get artifact link
        id: artifact
        run: |
          curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -s \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{github.run_id}}"

          curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -s \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{github.run_id}}/artifacts"

          check_suite_id=$(curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -s \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{github.run_id}}" \
          | jq -j '.check_suite_id')

          curl \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -s \
          "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{github.run_id}}/artifacts" \
          | jq -c '.artifacts[0]' > artifact.json

          curl \
          -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ github.token }}" \
          -s \
          -o artifact.zip \
          $(jq -j '.archive_download_url' artifact.json)
          unzip artifact.zip

          echo "pr_number=$(cat pr_number)" >> $GITHUB_OUTPUT
          echo "url=https://github.com/${{ github.repository }}/suites/${check_suite_id}/artifacts/$(jq -j '.id' artifact.json)" >> $GITHUB_OUTPUT
          echo "expires=$(jq -j '.expires_at' artifact.json)" >> $GITHUB_OUTPUT
      - name: Update comment
        uses: thollander/actions-comment-pull-request@v2
        with:
          message: |
            Artifact [8vim-debug](${{steps.artifact.outputs.url}}) available until: ${{steps.artifact.outputs.expires}}
          comment_tag: artifact
          pr_number: ${{github.event.number}}
